<?xml version='1.0' encoding='UTF-8'?>
<section version="5.0"
    xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
    xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:svg="http://www.w3.org/2000/svg" xmlns:mth="http://www.w3.org/1998/Math/MathML"
    xmlns:db="http://docbook.org/ns/docbook" xml:id="about_program_rules">
    <title>About program rules</title>
    <para>Program rules allows you to create and control dynamic behavior of the user interface in
        the <emphasis role="bold">Tracker Capture</emphasis> and <emphasis role="bold">Event
            Capture</emphasis> apps. During data entry, the program rules expressions are evaluated
        each time the user interface is displayed, and each time a data element is changed. Most
        types of actions will take effect immediately when the user enters values in the <emphasis
            role="bold">Tracker Capture</emphasis> and <emphasis role="bold">Event
            Capture</emphasis> apps.</para>
    <table frame="all">
        <title>Program rule components</title>
        <tgroup cols="2" align="left">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
            <thead>
                <row>
                    <entry>
                        <para>Program rule component</para>
                    </entry>
                    <entry>
                        <para>Description</para>
                    </entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <para>Program rule action</para>
                    </entry>
                    <entry>
                        <para>Each program rule contains one or multiple actions. These are the
                            behaviors that are triggered in the user interface when the expression
                            is true. Actions will be applied at once if the expression is true, and
                            will be reverted if the expression is no longer true. There are several
                            types of actions and you can have several actions in one program
                            rule.</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>Program rule expression</para>
                    </entry>
                    <entry>
                        <para>Each program rule has a single expression that determines whether the
                            program rule actions should be triggered, if the expression evaluates to
                            true. If the expression is true the program rule is in effect and the
                            actions will be executed. If the expression is false, the program rule
                            is no longer in effect and the actions will no longer be applied. </para>
                        <para>You create the expression with standard mathematical operators, custom
                            functions, user-defined static values and program rule variables. The
                            program rule variables represent attribute and data element values which
                            will be evaluated as part of the expression.</para>
                        <para>
                            <tip>
                                <para>You can nest functions within each other and with
                                    subexpressions to form more complex conditions. An example that
                                    produces the gestational age in weeks, based on last menstrual
                                    date:</para>
                                <screen>d2:floor( d2:daysBetween(#{lastMenstrualDate},V{event_date}) / 7 )</screen>
                            </tip>
                        </para>
                        <para>
                            <tip>
                                <para>The source type will determine how the d2: function calls will
                                    evaluate a (sourcefield) parameter.</para>
                                <para>Example: where #{hemoglobinCurrent} is set to source type
                                        <emphasis role="bold">Data element in current
                                        event</emphasis>. The following function call with evaluate
                                    whether hemoglobin is entered in the current event.
                                    <screen>d2:hasValue( 'hemoglobinCurrent' )</screen></para>
                                <para>Example: where #{hemoglobin} is set to source type <emphasis
                                        role="bold">Data element from the newest event in the
                                        current program</emphasis>. The following function call with
                                    evaluate whether there exists a value for the hemoglobin in any
                                    event in the enrollment.
                                    <screen>d2:hasValue( 'hemoglobin' )</screen></para>
                                <para>Example: where #{hemoglobinPrevious} is set to source type
                                        <emphasis role="bold">Data element from previous
                                        event</emphasis> . The following function call with evaluate
                                    whether there exists a value for the hemoglobin among the events
                                    preceding the current event.
                                    <screen>d2:hasValue( 'hemoglobinPrevious' )</screen></para>
                            </tip>
                        </para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>Program rule variable</para>
                    </entry>
                    <entry>
                        <para>Program rule variables lets you include data values and attribute
                            values in program rule expressions. Typically, you'll have to create one
                            or several program rule variables before creating a program rule. This
                            is because program rules expressions usually contain at least one data
                            element or attribute value to be meaningful.</para>
                        <para>The program rule variables are shared between all rules in your
                            program. When you create multiple program rules for the same program,
                            these rules will share the same library of program rule
                            variables.</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    <para>In the <emphasis role="bold">Maintenance</emphasis> app, you manage the following program
        rule objects:</para>
    <informaltable frame="all">
        <tgroup cols="2" align="left">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
            <thead>
                <row>
                    <entry>
                        <para>Object type</para>
                    </entry>
                    <entry>
                        <para>Available functions</para>
                    </entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <para>Program rule</para>
                    </entry>
                    <entry>
                        <para>Create, edit, clone, delete, show details and translate</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>Program rule variable</para>
                    </entry>
                    <entry>
                        <para>Create, edit, clone, share, delete, show details and translate</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <section>
        <title>About program rule variables</title>
        <para>Program rule variables lets you include data values and attribute values in program
            rule expressions. Typically, you'll have to create one or several program rule variables
            before creating a program rule. This is because program rules expressions usually
            contain at least one data element or attribute value to be meaningful. The program rule
            variables are shared between all rules in your program. When you create multiple program
            rules for the same program, these rules will share the same library of program rule
            variables.</para>
    </section>
    <section>
        <title>About program rule expressions</title>
        <para>Each program rule has a single expression that determines whether the program rule
            actions should be triggered, if the expression evaluates to true. If the expression is
            true the program rule is in effect and the actions will be executed. If the expression
            is false, the program rule is no longer in effect and the actions will no longer be
            applied. You can use standard mathematical operators or custom functions to create a
            program rule expression.</para>
        <para>
            <tip>
                <para>You can nest functions within each other and with subexpressions to form more
                    complex conditions. An example that produces the gestational age in weeks, based
                    on last menstrual date:</para>
                <screen>d2:floor( d2:daysBetween(#{lastMenstrualDate},V{event_date}) / 7 )</screen>
            </tip>
        </para>
        <para>
            <tip>
                <para>The source type will determine how the d2: function calls will evaluate a
                    (sourcefield) parameter.</para>
                <para>Example: where #{hemoglobinCurrent} is set to source type <emphasis
                        role="bold">Data element in current event</emphasis>. The following function
                    call with evaluate whether hemoglobin is entered in the current event.
                    <screen>d2:hasValue( 'hemoglobinCurrent' )</screen></para>
                <para>Example: where #{hemoglobin} is set to source type <emphasis role="bold">Data
                        element from the newest event in the current program</emphasis>. The
                    following function call with evaluate whether there exists a value for the
                    hemoglobin in any event in the enrollment.
                    <screen>d2:hasValue( 'hemoglobin' )</screen></para>
                <para>Example: where #{hemoglobinPrevious} is set to source type <emphasis
                        role="bold">Data element from previous event</emphasis> . The following
                    function call with evaluate whether there exists a value for the hemoglobin
                    among the events preceding the current event.
                    <screen>d2:hasValue( 'hemoglobinPrevious' )</screen></para>
            </tip>
        </para>
    </section>
    <section>
        <title>About program rule actions</title>
        <para>Each program rule contain one or several actions. These are the behaviors that are
            triggered in the user interface when the expression is true. Actions will be applied at
            once if the expression is true, and will be reverted if the expression is no longer
            true. There are several types of actions and you can have several actions in one program
            rule.</para>
        <table frame="all">
            <title>Program rule
                <?oxy_comment_start author="cecilia" timestamp="20170528T201346+0200" comment="In email from Markus:
Create event:Foreslår å skjule dette som en option i listen. Det hadde bare vært fint om det gikk an å vise den slik du har konfigurert den dersom noen har postet en slik via APIet og åpner den i UIet - men dette er ikke et must."?>actions<?oxy_comment_end?></title>
            <tgroup cols="3" align="left">
                <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                <colspec colname="newCol3" colnum="2" colwidth="1*"/>
                <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                <thead>
                    <row>
                        <entry align="left" valign="top">
                            <para>Action</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Required settings</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Assign value</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to assign value
                                to</emphasis></para>
                            <para><emphasis role="bold">Program rule variable to assign value
                                    to</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and
                                assign</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>TBA</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Display text</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Display widget</emphasis></para>
                            <para><emphasis role="bold">Static text</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and display after
                                    static text</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>TBA</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Display key/value pair</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Display widget</emphasis></para>
                            <para><emphasis role="bold">Key label</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and display as
                                    value</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>TBA</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Error on complete</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to display error next to
                                </emphasis></para>
                            <para><emphasis role="bold">Tracked entity attribute to display error
                                    next to </emphasis></para>
                            <para><emphasis role="bold">Static text</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and display after
                                    static text</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Used whenever you've cross-consistencies in the form that must be
                                strictly adhered to. This action prevents the user from continuing
                                until the error is resolved.</para>
                            <para>This action differs from the regular <emphasis role="bold">Show
                                    error</emphasis> since the error is not shown until the user
                                tries to actually complete the form.</para>
                            <para>If you don't select a data element or a tracked entity attribute
                                to display the error next to, make sure you write a comprehensive
                                error message that helps the user to fix the error.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Hide field</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to hide</emphasis></para>
                            <para><emphasis role="bold">Tracked entity attribute to
                                hide</emphasis></para>
                            <para><emphasis role="bold">Custom message for blanked
                                field</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Used when you want to hide a field from the user.</para>
                            <para><emphasis role="bold">Custom message for blanked field</emphasis>
                                allows you to define a custom message displayed to the user in case
                                the program rule hides and blanks out the field after the user typed
                                in or selected a value.</para>
                            <?oxy_comment_start author="cecilia" timestamp="20170528T193313+0200" comment="Still correcte?"?>
                            <para>If a hide field action hides a field that contains a value,
                                <?oxy_comment_start author="cecilia" timestamp="20170528T193545+0200" comment="Will the value be removed? Verify with SME."?>the
                                field will always removed.<?oxy_comment_end?> If no message is
                                defined, a standard message will be displayed to alert the
                                user.</para>
                            <?oxy_comment_end?>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <?oxy_comment_start author="cecilia" timestamp="20170528T193841+0200" comment="How does this work? 
Can&apos;t make it work in the UI."?>
                            <para><emphasis role="bold">Hide section</emphasis></para>
                            <?oxy_comment_end?>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Program stage section to
                                hide</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>TBA</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Hide program stage</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <?oxy_comment_start author="cecilia" timestamp="20170528T194936+0200" comment="No custom message anymore? Was one in legacy app."?>
                            <para><emphasis role="bold">Program stage to hide</emphasis></para>
                            <?oxy_comment_end?>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Used when you want to hide a program stage section from the
                                user.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Make field mandatory</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to make
                                mandatory</emphasis></para>
                            <para><emphasis role="bold">Tracked entity attribute to make
                                    mandatory</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>TBA</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Show error</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to display error next
                                    to</emphasis></para>
                            <para><emphasis role="bold">Tracked entity attribute to display error
                                    next to </emphasis></para>
                            <para><emphasis role="bold">Static text</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and display after
                                    static text</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Used whenever there are rules which must strictly be adhered to.
                                The show error action prevents the user from continuing until the
                                error is resolved. </para>
                            <para>Such a strict validation should only be used when it's certain
                                that the evaluated expression is never true unless the user has made
                                a mistake in data entry. </para>
                            <para>It's mandatory to define a message that is shown to the user when
                                the expression is true and the action is triggered.</para>
                            <para>You can select which data element or tracked entity attribute to
                                link the error to. This will help the user to fix the error.</para>
                            <para>In case several data elements or attributes are involved, select
                                the one that is most likely that the user would need to change.
                            </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Show warning</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to display warning next
                                    to</emphasis></para>
                            <para><emphasis role="bold">Tracked entity attribute to display warning
                                    next to </emphasis></para>
                            <para><emphasis role="bold">Static text</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and display after
                                    static text</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Used to give the user a warning about the entered data, but at the
                                same time to  allow the user to save and continue.</para>
                            <para>You can use warnings to help the user avoid errors in the entered
                                data, while at the same time allow the user to consciously disregard
                                the warnings and save a value that is outside preset
                                expectations.</para>
                            <para><emphasis role="bold">Static text</emphasis> defines the message
                                shown to the user when the expression is true and the action is
                                triggered.</para>
                            <para>You can select which data element or tracked entity attribute to
                                link the error to. This will help the user to fix the error.</para>
                            <para>In case several data elements or attributes are involved, select
                                the one that is most likely that the user would need to change.
                            </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Warning on complete</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para><emphasis role="bold">Data element to display warning next
                                    to</emphasis></para>
                            <para><emphasis role="bold">Tracked entity attribute to display warning
                                    next to </emphasis></para>
                            <para><emphasis role="bold">Static text</emphasis></para>
                            <para><emphasis role="bold">Expression to evaluate and display after
                                    static text</emphasis></para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Used to give the user a warning if he/she tries to complete
                                inconsistent data, but at the same time to allow the user to
                                continue. The warning is shown in a dialog when the user completes
                                the form.</para>
                            <para><emphasis role="bold">Static text</emphasis> defines the message
                                shown to the user when the expression is true and the action is
                                triggered. This field is mandatory.</para>
                            <para>You can select which data element or tracked entity attribute to
                                link the error to. This will help the user to fix the error.</para>
                            <para>If you don't select a data element or a tracked entity attribute
                                to display the error next to, make sure you write a comprehensive
                                error message that helps the user to fix the error.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
</section>
