<?xml version='1.0' encoding='UTF-8'?>
<section version="5.0"
    xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
    xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:svg="http://www.w3.org/2000/svg" xmlns:mth="http://www.w3.org/1998/Math/MathML"
    xmlns:db="http://docbook.org/ns/docbook" xml:id="about_program_rules">
    <title>About program rules</title>
    <para>Program rules allows you to create and control dynamic behavior of the user interface in
        the <emphasis role="bold">Tracker Capture</emphasis> and <emphasis role="bold">Event
            Capture</emphasis> apps. Program rules consist of:</para>
    <itemizedlist>
        <listitem>
            <para>An expression</para>
            <para>You build the expression with operators, user-defined static values and program
                rule variables. The program rule variables represent attribute and data element
                values which will be evaluated as part of the expression.</para>
        </listitem>
        <listitem>
            <para>One or several actions that are triggered in the user interface when the
                expression is true.</para>
        </listitem>
    </itemizedlist>
    <para>During data entry, program rules expressions are evaluated each time the user interface is
        displayed, and each time a data element is changed. Most types of actions will take effect
        immediately when the user enters values in <emphasis role="bold">Tracker Capture</emphasis>
        and <emphasis role="bold">Event Capture</emphasis> apps.</para>
    <para>In the <emphasis role="bold">Maintenance</emphasis> app, you manage the following program
        rule objects:</para>
    <table frame="all">
        <title>Program rule metadata objects in the Maintenance app</title>
        <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
            <thead>
                <row>
                    <entry>
                        <para>Object type</para>
                    </entry>
                    <entry>
                        <para>Available functions</para>
                    </entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <para>Program rule</para>
                    </entry>
                    <entry>
                        <para>Create, edit, clone, delete, show details and translate</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>Program rule variable</para>
                    </entry>
                    <entry>
                        <para>Create, edit, clone, share, delete, show details and translate</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    <section>
        <title>About program rule variables</title>
        <para>Program rule variables lets you include data values and attribute values in program
            rule expressions. Typically, you'll have to create one or several program rule variables
            before creating a program rule. This is because program rules expressions usually
            contain at least one data element or attribute value to be meaningful. The program rule
            variables are shared between all rules in your program. When you create multiple program
            rules for the same program, these rules will share the same library of program rule
            variables.</para>
    </section>
    <section>
        <title>About program rule expressions</title>
        <para>Each program rule has a single expression that determines whether the program rule
            actions should be triggered, if the expression evaluates to true. If the expression is
            true the program rule is in effect and the actions will be executed. If the expression
            is false, the program rule is no longer in effect and the actions will no longer be
            applied. You can use standard mathematical operators or custom functions to create a
            program rule expression.</para>
        <para><?oxy_comment_start author="cecilia" timestamp="20170528T153931+0200" comment="Still correct?"?>
            <?oxy_custom_start type="oxy_content_highlight" color="235,192,230" mid="1"?>The
            expression length is limited to 255
            characters.<?oxy_comment_end?><?oxy_custom_end mid="1"?></para>
        <para>
            <tip>
                <para>You can nest functions within each other and with subexpressions to form more
                    complex conditions. An example that produces the gestational age in weeks, based
                    on last menstrual date:</para>
                <screen>d2:floor( d2:daysBetween(#{lastMenstrualDate},V{event_date}) / 7 )</screen>
            </tip>
        </para>
        <para>
            <tip>
                <para>The source type will determine how the d2: function calls will evaluate a
                    (sourcefield) parameter.</para>
                <para>Example: where #{hemoglobinCurrent} is set to source type <emphasis
                        role="bold">Data element in current event</emphasis>. The following function
                    call with evaluate whether hemoglobin is entered in the current event.
                    <screen>d2:hasValue( 'hemoglobinCurrent' )</screen></para>
                <para>Example: where #{hemoglobin} is set to source type <emphasis role="bold">Data
                        element from the newest event in the current program</emphasis>. The
                    following function call with evaluate whether there exists a value for the
                    hemoglobin in any event in the enrollment.
                    <screen>d2:hasValue( 'hemoglobin' )</screen></para>
                <para>Example: where #{hemoglobinPrevious} is set to source type <emphasis
                        role="bold">Data element from previous event</emphasis> . The following
                    function call with evaluate whether there exists a value for the hemoglobin
                    among the events preceding the current event.
                    <screen>d2:hasValue( 'hemoglobinPrevious' )</screen></para>
            </tip>
        </para>
    </section>
    <section>
        <title>About program rule actions</title>
        <para>Each program rule has one or more actions attached. These are the behaviors that are
            triggered in the user interface when the expression is true. Actions will be applied at
            once if the expression is true, and will be reverted if the expression is no longer
            true. There are several types of actions and you can have several actions in one program
            rule.</para>
        <table frame="all">
            <title>Program rule actions in the Maintenance app</title>
            <tgroup cols="3" align="left">
                <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                <thead>
                    <row>
                        <entry align="left" valign="top">
                            <para>Action</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Effects what in Tracker Capture or Event Capture apps</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Description</para>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry align="left" valign="top">
                            <para>Assign value</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Assign value:</para>
                            <para>Data element: Data element to assign value to</para>
                            <para>Content: Program rule variable to assign value to Data: Expression
                                to evaluate and assign(Det hadde vært _best_ om det var tydelig at
                                data feltet er en expression, hvor programRuleVariables og
                                funksjoner of operatorer kan fylles inn på samme måte som i steg
                                2)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para/>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Display text</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Display text:</para>
                            <para>Location: WidgetContent: Static text</para>
                            <para>Data: Expression to evaluate and display(Det hadde vært _best_ om
                                det var tydelig at data feltet er en expression, hvor
                                programRuleVariables og funksjoner of operatorer kan fylles inn på
                                samme måte som i steg 2)</para>
                        </entry>
                        <entry align="left" valign="top"/>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Display key/value pair</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Display key/value pair:</para>
                            <para>Location: WidgetContent: Key label</para>
                            <para>Data: Expression to evaluate and display as value(Det hadde vært
                                _best_ om det var tydelig at data feltet er en expression, hvor
                                programRuleVariables og funksjoner of operatorer kan fylles inn på
                                samme måte som i steg 2)</para>
                        </entry>
                        <entry align="left" valign="top"/>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Error on complete</para>
                        </entry>
                        <entry align="left" valign="top"/>
                        <entry align="left" valign="top">
                            <para> A <emphasis role="bold">show error preventing
                                    completion</emphasis> is defined by selecting the corresponding
                                action in the first column of the action row. A show error action is
                                used whenever there are cross-consistencies in the form that must be
                                strictly adhered to. This action prevents the user from continuing
                                until the error is resolved. Id differs from the regular <emphasis
                                    role="bold"> show error action</emphasis> in that the error is
                                not shown until the user tries to actually complete the form.</para>
                            <para> The second column is mandatory, and is used to define the message
                                shown to the user when the expression is true and the action is
                                triggered. </para>
                            <para> The third column specifies which data element to link the error
                                to, and can be used to tie the error to a specific data element. The
                                default selection in the list is 'None', and this simply means that
                                no single field is specifically linked to the error. When 'None' is
                                selected, make sure to write a comprehensive error message that
                                directs the user to where the error can be fixed.</para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Hide field</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Data element: Data element to hide</para>
                            <para>Tracked entity attribute: Tracked entity attribute to hide</para>
                            <para>Content: Custom message given to user when field is blanked</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para> The second column is optional, and it allows defining a custom
                                message to the end user in case the rule hides and blanks out the
                                field after the end user typed in or selected a value. </para>
                            <para>If a hide field action hides a field that contains a value, the
                                field will always removed. If no message is defined, a standard
                                message will be displayed to alert the user</para>
                            <para> The third column specifies which data element that the <emphasis
                                    role="bold">hide field action</emphasis> should hide. </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Hide section</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Program stage section: Program stage section to hide</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para> A hide field action is defined by selecting &quot;Hide
                                section&quot; in the first column of the action row. </para>
                            <para> The second column is optional, and it allows defining a custom
                                message to the end user in case the rule hides a section that
                                contains a field that again has a value. </para>
                            <para> If a hide section action hides a section with one or more fields
                                that contains a value, these fields will always be removed. If no
                                message is defined, a standard message will be displayed to alert
                                the user. </para>
                            <para> The third column specifies which section that the hide section
                                action should hide. </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Hide program stage</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Hide program stage:</para>
                            <para>Program stage: Program stage to hide</para>
                        </entry>
                        <entry align="left" valign="top"/>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Make field mandatory</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Make field mandatory:Data element: Data element to make
                                mandatoryTracked entity attribute: Tracked entity attribute to make
                                mandatory</para>
                        </entry>
                        <entry align="left" valign="top"/>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Show error</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Show error:Data element: Data element to display error next
                                    to<emphasis role="bold">Tracked entity attribute: Tracked entity
                                    attribute to display error next to (Denne manglet, jeg har
                                    sikkert dokumentert feil i WebAPI docs, men kan du legge den
                                    inn?)</emphasis>Content: Static error messageData: Expression to
                                evaluate and display at the end of the message(Det hadde vært _best_
                                om det var tydelig at data feltet er en expression, hvor
                                programRuleVariables og funksjoner of operatorer kan fylles inn på
                                samme måte som i steg 2)</para>
                            <para>Show error:Data element: Data element to display error next
                                toTracked entity attribute: Tracked entity attribute to display
                                error next toContent: Static error messageData: Expression to
                                evaluate and display at the end of the message(Det hadde vært _best_
                                om det var tydelig at data feltet er en expression, hvor
                                programRuleVariables og funksjoner of operatorer kan fylles inn på
                                samme måte som i steg 2)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para> A <emphasis role="bold">show error action</emphasis> is defined
                                by selecting &quot;show error&quot; in the first column of the
                                action row. A show error action is used whenever there are rules
                                which must strictly be adhered to. The show error action prevents
                                the user from continuing until the error is resolved. Such a strict
                                validation should only be used whenever it is certain that the
                                evaluated expression is never true unless the user has made a
                                mistake in data entry. </para>
                            <para> The second column is mandatory, and is used to define the message
                                shown to the user when the expression is true and the action is
                                triggered. </para>
                            <para> The third column specifies which data element or attribute to
                                link the error to, and is meant to be a cue for the user regarding
                                where the cause of the error can be rectified. In case several data
                                elements or attributes is involved, choose the one that is most
                                likely that the user would need to change. </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Show warning</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Show warning:</para>
                            <para>Data element: Data element to display warning next to</para>
                            <para>Tracked entity attribute: Tracked entity attribute to display
                                warning next to</para>
                            <para>Content: Static warning message</para>
                            <para>Data: Expression to evaluate and display at the end of the
                                message(Det hadde vært _best_ om det var tydelig at data feltet er
                                en expression, hvor programRuleVariables og funksjoner of operatorer
                                kan fylles inn på samme måte som i steg 2)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para> A <emphasis role="bold">show warning action</emphasis> is defined
                                by selecting &quot;show warning&quot; in the first column of the
                                action row. A show warning action is used to give the user a warning
                                about the data being entered, but at the same time allowing the user
                                to save and continue. Warnings can be used to help the user avoid
                                errors in the data entered, while at the same time allowing the user
                                to consciously disregard it and save a value that is outside preset
                                expectations. </para>
                            <para> The second column is mandatory, and is used to define the message
                                shown to the user when the expression is true and the action is
                                triggered. </para>
                            <para> The third column specifies which data element or attribute to
                                link the warning to, and is meant to be a recommendation to the user
                                regarding where the cause of the warning can be rectified. In case
                                several data elements or attributes are involved, when defining the
                                rule, you should choose the one that is most likely that the user
                                would need to consider. </para>
                        </entry>
                    </row>
                    <row>
                        <entry align="left" valign="top">
                            <para>Warning on complete</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para>Show warning on completeData element: Data element to display
                                warning next to<emphasis role="bold">Tracked entity attribute:
                                    Tracked entity attribute to display warning next to (Denne
                                    manglet, jeg har sikkert dokumentert feil i WebAPI docs, men kan
                                    du legge den inn?)</emphasis>Content: Static warning
                                messageData: Expression to evaluate and display at the end of the
                                message(Det hadde vært _best_ om det var tydelig at data feltet er
                                en expression, hvor programRuleVariables og funksjoner of operatorer
                                kan fylles inn på samme måte som i steg 2)</para>
                        </entry>
                        <entry align="left" valign="top">
                            <para> A <emphasis role="bold">show warning on completing
                                    action</emphasis> is defined by selecting the corresponding
                                option in the first column of the action row. A show warning on
                                completion action is used to give the user a warning if trying to
                                complete inconsistent data, but at the same time allowing the user
                                to continue. The warning is shown in a dialog when completing the
                                form.</para>
                            <para> The second column is mandatory, and is used to define the message
                                shown to the user when the expression is true and the action is
                                triggered. </para>
                            <para> The third column specifies which data element to link the warning
                                to, and can be used to tie the error to a specific data element. The
                                default selection in the list is 'None', and this simply means that
                                no single field is specifically linked to the error. When 'None' is
                                selected, make sure to write a comprehensive error message that
                                directs the user to where the error can be fixed. </para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <?oxy_comment_start author="cecilia" timestamp="20170528T152854+0200" comment="Status of this action? Not in list in UI."?>
        <para>Create event:Foreslår å skjule dette som en option i listen. Det hadde bare vært fint
            om det gikk an å vise den slik du har konfigurert den dersom noen har postet en slik via
            APIet og åpner den i UIet - men dette er ikke et must.</para>
        <?oxy_comment_end?>
    </section>
</section>
